theme = "gruvbox-material"

[editor]
line-number = "relative"
cursorline = true
true-color = true
scrolloff = 20
bufferline = "always"
end-of-line-diagnostics = "warning"

[editor.inline-diagnostics]
cursor-line = "warning" # show warnings and errors on the cursorline inline

[editor.cursor-shape]
insert = "bar"
normal = "underline"
select = "underline"

[editor.statusline]
left = ["mode", "spacer", "spinner", "spacer", "workspace-diagnostics"]
center = ["file-name"]
right = ["register", "spacer", "selections", "spacer", "primary-selection-length", "spacer", "position-percentage", "spacer", "position"]
separator = "  "

[editor.lsp]
display-messages = true
auto-signature-help = true
display-signature-help-docs = false
display-inlay-hints = false
display-progress-messages = true

[editor.search]
smart-case = false

[editor.soft-wrap]
enable = true
wrap-indicator =" â¤· "

[editor.smart-tab]
enable = false

[keys.normal]
# Vertical movement relative to hard lines
j = "move_line_down"
k = "move_line_up"
# Vertical movement relative to warped lines
C-j = "move_visual_line_down"
C-k = "move_visual_line_up"
# deselect on insert/append
# i = ["collapse_selection", "insert_mode"]
# a = ["ensure_selections_forward", "collapse_selection", "move_char_right", "insert_mode"]

# [keys.select]
# deselect on insert/append
# i = ["collapse_selection", "insert_mode"]
# a = ["ensure_selections_forward", "collapse_selection", "move_char_right", "insert_mode"]

# Add some custom binding to the space menu
[keys.normal.'space']
c = ":buffer-close"
H = ":toggle lsp.display-inlay-hints"
R = ":reflow"
f = "file_picker_in_current_directory"
F = "file_picker"
# e = "file_explorer_in_current_buffer_directory"
# E = "file_explorer"

# Add some custom bindings to the space-space menu (custom)
[keys.normal.'space'.'space']
# Change current working directory to current buffer file folder
c = ":cd %sh{find %sh{dirname %{buffer_name}} -type d -not -path '*/.git/*' | fzf}"
# Change current working directory to git project root
C = ":echo %sh{find %sh{git rev-parse --show-toplevel 2>/dev/null || pwd} -type d -not -path '*/.git/*' -not -path '*/target*' | fzf}"
# Interactive search in current working directory
s = ":open %sh{ff -c -q '%{selection}' .}"
# Interactive search in current git project root
S = ":open %sh{ff -c -q '%{selection}' %sh{git rev-parse --show-toplevel 2>/dev/null}}"
# Interactive search in current working directory (include path name)
f = ":open %sh{ff -cf -q '%{selection}' .}"
# Interactive search in current git project root directory (include path name)
F = ":open %sh{ff -cf -q '%{selection}' %sh{git rev-parse --show-toplevel 2>/dev/null}}"
# Interactive search in current buffer
# b = ":echo ."
b = ":open %sh{ff -c -q '%{selection}' %{buffer_name}}"
# Yazi current file directory
e = [
  ':sh rm -f /tmp/unique-file',
  ':insert-output yazi %{buffer_name} --chooser-file=/tmp/unique-file',
  ':insert-output echo "\x1b[?1049h\x1b[?2004h" > /dev/tty',
  ':open %sh{cat /tmp/unique-file}',
  ':redraw',
]
# Yazi workspace directory
E = [
  ':sh rm -f /tmp/unique-file',
  ':insert-output yazi %sh{git rev-parse --show-toplevel 2>/dev/null || pwd} --chooser-file=/tmp/unique-file',
  ':insert-output echo "\x1b[?1049h\x1b[?2004h" > /dev/tty',
  ':open %sh{cat /tmp/unique-file}',
  ':redraw',
]
# Gitui
g = [
  ":write-all",
  ":new",
  ":insert-output gitui >/dev/tty",
  ":buffer-close!",
  ":redraw",
  ":reload-all"
]
# Git blame
B = ":sh git blame -L %{cursor_line},+1 %{buffer_name}"
# TODO Git browse github repo using default browser
O = ":echo %sh{git branch --show-current}"
# Diff current buffer with content on disk
D = [
  "select_all",
  "yank",
  "collapse_selection",
  ":new",
  "paste_before",
  "goto_file_end",
  "delete_char_backward",
  ":write! /tmp/helix-diff-dump",
  ":buffer-close",
  "goto_file_start",
  "goto_next_change",
  ":sh diff --unified=0 %{buffer_name} /tmp/helix-diff-dump; true"
]
d = [
  "goto_file_start",
  "goto_next_change",
  ":sh git diff --unified=0 %{buffer_name}; true"
]
r = ":reset-diff-change"
w = ":toggle-option soft-wrap.enable"

z = "shrink_selection"
Z = "expand_selection"
