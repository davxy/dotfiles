#!/bin/bash
#
# Tool to synchronize versioned and system dot files.
#
# Depends on:
# - hostname
# - rsync

SYNC="rsync -av --progress --delete"

# Array of 'system | versioned' file couples
shared_files=(
    # bash
    "$HOME/.bashrc | bash/bashrc"
    "$HOME/.bash_profile | bash/bash_profile"
    "$HOME/.profile | bash/profile"
    "$HOME/.inputrc | bash/inputrc"
    # fonts configuration
    "$HOME/.config/fontconfig/ | fontconfig/"
    # git
    "$HOME/.config/git/ | git/"
    # helix
    "$HOME/.config/helix/ | helix/"
    # zellij
    "$HOME/.config/zellij/ | zellij/"
    # hyprland
    "$HOME/.config/hypr/ | hypr/"
    # waybar
    "$HOME/.config/waybar/ | waybar/"
    # swaylock
    "$HOME/.config/swaylock/ | swaylock/"
    # wofi
    "$HOME/.config/wofi/ | wofi/"
    # rofimoji
    "$HOME/.config/rofimoji.rc | rofimoji/rofimoji.rc"
    # wob
    "$HOME/.config/wob/ | wob/"
    # alacritty
    "$HOME/.config/alacritty/ | alacritty/"
    # ranger
    "$HOME/.config/ranger/ | ranger/"
    # gitui
    "$HOME/.config/gitui/ | gitui/"
    # zathura
    "$HOME/.config/zathura/ | zathura/"
    # mako
    "$HOME/.config/mako/ | mako/"
    # tridactyl
    "$HOME/.config/tridactyl/ | tridactyl/"
    # lldb
    "$HOME/.lldbinit | lldb/lldbinit"
    "$HOME/.lldb/scripts/ | lldb/scripts/"
    # X defaults
    "$HOME/.Xdefaults | misc/Xdefaults"
    # Mime associations
    "$HOME/.config/mimeapps.list | misc/mimeapps.list"
    # ssh
    "$HOME/.ssh/config | ssh/config"
    # OTP tool
    "$HOME/.config/otp/ | otp/"
)

behemoth_files=(
    # wayvnc
    "$HOME/.config/wayvnc/ | wayvnc/"
    # samba
    "/etc/samba/smb.conf | samba/smb.conf"
)

workmule_files=(
)

if [[ $1 == "out" ]]; then
    echo "Syncing OUT"
    out=1
elif [[ $1 == "in" ]]; then
    echo "Syncing IN"
    out=0
else
    echo "Usage: sync in|out [--confirm]"
    echo "  in : copy files from system folders"
    echo "  out: copy files to system folders"
    echo "  --confirm: prompt for confirmation before synchronization"
    exit
fi

confirm=0
if [[ $2 == "--confirm" ]]; then
    confirm=1
fi

function sync_files() {
    files=("$@")

    for file in "${files[@]}"; do
        system_file=$(echo $file | cut -d'|' -f1)
        local_file=$(echo $file | cut -d'|' -f2)

        # Quick (and dirty) way to trim front/back whitespaces
        system_file=$(echo $system_file)
        local_file=$(echo $local_file)

        if [[ $out == 1 ]]; then
            in_file=$local_file
            out_file=$system_file
        else
            in_file=$system_file
            out_file=$local_file
        fi

        echo "* " $in_file "->" $out_file

        if [[ $confirm == 1 ]]; then
            printf "proceed [N/y]? "
            read confirmed
        else
            confirmed="y"
        fi

        if [[ $confirmed == "y" ]]; then
            if [[ -f "$in_file" ]] || [[ -d "$in_file" ]]; then
                $SYNC $in_file $out_file
            else
                echo "Skipping unexistent file \"$in_file\""
            fi
        fi
    done
}

sync_files "${shared_files[@]}"

if [[ $(hostname) = "behemoth" ]]; then
    echo "SYNCING BEHEMOTH"
    sync_files "${behemoth_files[@]}"
fi

if [[ $(hostname) = "workmule" ]]; then
    echo "SYNCING WORKMULE"
    sync_files "${workmule_files[@]}"
fi
