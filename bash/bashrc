# ~/.bashrc
#
# executed by bash(1) for non-login shells.
#
# Version 0.2.0
#
# Dependencies:
# - zellij
# - ranger
# - starship
# - exa
# - zoxide
# - bat
# - alacritty

# If not running interactively (e.g. scp), don't do anything
if [[ $- != *i* ]]; then
    return
fi

PS1='[\u@\h \W]\$ '

# Prevent nested `ranger` sessions
function ranger() {
    if [ -z "$RANGER_LEVEL" ]; then
        $(which ranger) --choosedir=/tmp/rangerdir "$@"
        cd "$(cat /tmp/rangerdir)"; rm /tmp/rangerdir
    else
        exit
    fi
}

# Allow exiting from zellij
function zellij() {
    if [[ $1 == "exit" ]]; then
        touch /tmp/zexit
        exit
    fi
    $(which zellij) "$@"
}

# Start zellij session
# Do this asap to prevent double execution of this script.
# Inspired by: eval "$(zellij setup --generate-auto-start bash)"
if [[ -z "$ZELLIJ" ]]; then
    # short sleep to prevent ending up with strange artifacts
    # when using Hyprland animations
    sleep 0.01 && zellij
    if [[ -f /tmp/zexit ]]; then
        rm /tmp/zexit
    else
        exit
    fi
fi    

# Don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth:erasedups
# Append to the history file, don't overwrite it
shopt -s histappend
# For setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000
# Append-clear-reload history
PROMPT_COMMAND="history -a; history -c; history -r;${PROMPT_COMMAND}"

# Save the current directory to a file
PROMPT_COMMAND="echo $PWD > /tmp/last_dir;${PROMPT_COMMAND}"
# Restore the last visited folder when a new terminal is opened
if [[ -f /tmp/last_dir ]]; then
    cd $(cat /tmp/last_dir)
fi

# Check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# Enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
    if [ -f /usr/share/bash-completion/bash_completion ]; then
        . /usr/share/bash-completion/bash_completion
    elif [ -f /etc/bash_completion ]; then
        . /etc/bash_completion
    fi
fi

# helix
alias hx=helix
# alacritty
alias term=alacritty
# bat
alias cat='bat -pP'
# ripgrep
alias grep=rg
# exa
alias ls=exa
alias ll='exa -lg'
alias la='exa -alg'
alias tree='exa -T'
# zoxide
alias cd=z
# cd aliases
alias ze="fzf --bind 'enter:execute(rifle {})'"

# Disable START/STOP output control.
# Do not interpret Ctrl-s and Ctrl-q as flow signals for terminal output.
# Zellij disables it anyway (but we may exit zellij)
stty -ixon

# Disable shell exit when reading EOF 
set -o ignoreeof

# Start gpg-agent as ssh-agent
# The gpg-agent need to be run once because ssh can't start it automatically.
# (see gpg-agent man page for details under `--enable-ssh-support`)
unset SSH_AGENT_PID
export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
# Set GPG_TTY as stated in `man gpg-agent`
export GPG_TTY=$(tty)
#gpgconf --launch gpg-agent
#gpg-connect-agent reloadagent /bye > /dev/null
gpg-connect-agent updatestartuptty /bye > /dev/null


# Enable vi mode
set -o vi

# Manually source fzf completions
# (otherwise we require to trigger it once using fzf+<tab>)
source /usr/share/fzf/key-bindings.bash
source /usr/share/fzf/completion.bash

# Cargo
source "$HOME/.cargo/env"

# Start zoxide
eval "$(zoxide init bash)"
# v0.4.0 doesn't use 'builtin cd' and thus triggers recusion if using cd alias
# Remove as soon as new version is released:
# https://tracker.debian.org/pkg/rust-zoxide
_z_cd() {
    builtin cd "$@" || return "$?"
    if [ "$_ZO_ECHO" = "1" ]; then
        echo "$PWD"
    fi
}


# Start starship
eval "$(starship init bash)"
